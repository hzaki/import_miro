on:
  workflow_dispatch:
    inputs:
      prefix:
        description: "Préfixe des frames (idempotence légère)"
        type: string
        default: "R4"
        required: true
      csv_path:
        description: "Chemin vers un CSV dans le repo (ex: data/storymap_r4.csv)"
        type: string
        required: false
      dry_run:
        description: "Ne pas écrire dans Miro, seulement afficher"
        type: choice
        options: ["true", "false"]
        default: "true"
        required: true

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      MIRO_TOKEN: ${{ secrets.MIRO_TOKEN }}
      MIRO_BOARD_ID: ${{ secrets.MIRO_BOARD_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Show inputs & files
        shell: bash
        run: |
          echo "prefix=${{ inputs.prefix }} csv=${{ inputs.csv_path }} dry_run=${{ inputs.dry_run }}"
          ls -la
          find . -maxdepth 2 -type f -print | sort

      - name: Validate files
        shell: bash
        run: |
          set -euo pipefail
          SCRIPT=push_storymap_r4_to_miro.py
          if [[ ! -f "$SCRIPT" ]]; then
            echo "Fichier manquant: $SCRIPT (attendu à la racine du repo)." >&2
            exit 2
          fi
          if [[ -n "${{ inputs.csv_path }}" ]]; then
            if [[ ! -f "${{ inputs.csv_path }}" ]]; then
              echo "CSV introuvable: ${{ inputs.csv_path }}" >&2
              exit 2
            fi
          fi
          echo "Validation OK."

      - name: Install dependencies
        shell: bash
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests pandas python-slugify
          fi

      - name: Pre-check Miro access (optional)
        if: ${{ env.MIRO_TOKEN != '' && env.MIRO_BOARD_ID != '' }}
        shell: bash
        run: |
          set -e
          echo "Checking board $MIRO_BOARD_ID ..."
          curl -sS -H "Authorization: Bearer $MIRO_TOKEN" "https://api.miro.com/v2/boards/$MIRO_BOARD_ID" | head -c 1000 || true

      - name: Run Story Mapping script
        shell: bash
        run: |
          set -euo pipefail
          args=( --board "$MIRO_BOARD_ID" --prefix "${{ inputs.prefix }}" )
          if [ -n "${{ inputs.csv_path }}" ]; then
            args+=( --csv "${{ inputs.csv_path }}" )
          fi
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            args+=( --dry-run )
          fi
          echo "Command: python script_python_story_mapping_r_4_vers_miro_projet_it_calf.py ${args[*]}"
          python script_python_story_mapping_r_4_vers_miro_projet_it_calf.py "${args[@]}"

      - name: Save summary
        if: always()
        shell: bash
        run: |
          printf "Prefix: %s\nCSV: %s\nDry-run: %s\n" "${{ inputs.prefix }}" "${{ inputs.csv_path }}" "${{ inputs.dry_run }}" > run-summary.txt

      - name: Upload logs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: miro-storymap-r4-logs
          path: run-summary.txt
